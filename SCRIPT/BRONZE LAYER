--THIS SCRIPT CONTAIN THE ENTIRE EXTRACT OF UNFILTERED DATA FROM SOURCE
if object_id ( 'bronze.crm_cust_info','u') is not null 
    drop table bronze.crm_cust_info ;
create table bronze.crm_cust_info(
cust_id int,
cust_key nvarchar(50),
cust_firstname nvarchar(50),
cust_lastname nvarchar(50),
cust_marital_status nvarchar(50),
cust_gend nvarchar(50),
cust_create_date date

);

if object_id ( 'bronze.crm_prod_info','u') is not null 
    drop table bronze.crm_prod_info ;
create table bronze.crm_prod_info(
prod_id int,
prod_key nvarchar(50),
prd_nm nvarchar(50),
prod_cost nvarchar(50),
prod_line nvarchar(50),
prod_start date,
prod_end date

);
if object_id ( 'bronze.crm_sales_det','u') is not null 
    drop table bronze.crm_sales_det ;
create table bronze.crm_sales_det(
sls_ord_num nvarchar(50),
sls_prd_key nvarchar(50),
sls_cust_id int,
sls_order_id int,
sls_ship_date date,
sls_due_date date,
sls_sales int,
sls_quantity int,
sls_price int


);
if object_id ( 'bronze.erp_cust_az','u') is not null 
    drop table bronze.erp_cust_az ;

create table bronze.erp_cust_az(
cust_id nvarchar(50),
cust_birthday date,
gend nvarchar(50)

);
if object_id ( 'bronze.erp_locat','u') is not null 
    drop table bronze.erp_locat ;
create table bronze.erp_locat(
cust_id nvarchar(50),
country nvarchar(50)

);
if object_id ( 'bronze.erp_part','u') is not null 
    drop table bronze.erp_part ;
create table bronze.erp_part(
part_id nvarchar(50),
catergory nvarchar(50),
sub_catergory nvarchar(50),
maintenance nvarchar(50)

);
-- check if the datatype matches the sourcew
select COLUMN_NAME,
data_type,
CHARACTER_MAXIMUM_LENGTH
from INFORMATION_SCHEMA.COLUMNS
where TABLE_SCHEMA ='bronze';

--SINCE WE WILL BE UPDATING THIS TABLE FREQUENTLY ADD STORED PROCEDURE
CREATE OR ALTER PROCEDURE bronze.load_bronze
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY 
        DECLARE @START_TIME DATETIME, @ENDTIME DATETIME,
        @START_TIME_WHOLEBATCH DATETIME,@END_TIME_WHOLEBATCH DATETIME

SET @START_TIME_WHOLEBATCH = GETDATE()

        -- ========================================
        -- Load CRM Source Data into Bronze Layer
        -- ========================================
        SET @START_TIME = GETDATE();

        -- Truncate existing data in crm_cust_info table
        TRUNCATE TABLE bronze.crm_cust_info;

        -- Bulk load customer information from CRM source CSV
        BULK INSERT bronze.crm_cust_info
        FROM 'C:\SQL2022\sql-data-warehouse-project\datasets\source_crm\cust_info.csv'
        WITH (
            FIRSTROW = 2,
            FIELDTERMINATOR = ',',
            TABLOCK
        );

        SET @ENDTIME = GETDATE();

        PRINT 'bronze.crm_cust_info>> crm_cust_info LOAD DURATION: ' 
            + CAST(DATEDIFF(SECOND, @START_TIME, @ENDTIME) AS NVARCHAR) 
            + ' seconds';
        -- Truncate existing data in crm_prod_info table
       -- Start timer
SET @START_TIME = GETDATE();

-- Truncate the existing data
TRUNCATE TABLE bronze.crm_prod_info;

-- Bulk insert from CSV file
BULK INSERT bronze.crm_prod_info
FROM 'C:\SQL2022\sql-data-warehouse-project\datasets\source_crm\prd_info.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    TABLOCK
);

-- End timer
SET @ENDTIME = GETDATE();

-- Print duration
PRINT 'bronze.crm_prod_info>> crm_prod_info LOAD DURATION: ' 
    + CAST(DATEDIFF(SECOND, @START_TIME, @ENDTIME) AS NVARCHAR) 
    + ' seconds';


        -- Truncate existing data in crm_sales_det table
        set @START_TIME =GETDATE()
        TRUNCATE TABLE bronze.crm_sales_det;

        -- Bulk load sales details from CRM source CSV
        BULK INSERT bronze.crm_sales_det
        FROM 'C:\SQL2022\sql-data-warehouse-project\datasets\source_crm\sales_details.csv'
        WITH (
            FIRSTROW = 2,
            FIELDTERMINATOR = ',',
            TABLOCK
        );
        set @ENDTIME =GETDATE()
       print'bronze.crm_sales_det>>bronze.crm_sales_det INFO LOAD DURATION:' + cast( DATEDIFF(second,@START_TIME,@ENDTIME) as nvarchar) +'seconds';

        -- ========================================
        -- Load ERP Source Data into Bronze Layer
        -- ========================================

        -- Truncate existing data in erp_cust_az table
        set @START_TIME =GETDATE()
        TRUNCATE TABLE bronze.erp_cust_az;

        -- Bulk load customer data from ERP source CSV
        BULK INSERT bronze.erp_cust_az
        FROM 'C:\SQL2022\sql-data-warehouse-project\datasets\source_erp\cust_az12.csv'
        WITH (
            FIRSTROW = 2,
            FIELDTERMINATOR = ',',
            TABLOCK
        );
        set @ENDTIME =GETDATE()
       print' bronze.erp_cust_az>> LOAD DURATION:' + cast( DATEDIFF(second,@START_TIME,@ENDTIME) as nvarchar) +'seconds';

        -- Truncate existing data in erp_locat table
        set @START_TIME =GETDATE()
        TRUNCATE TABLE bronze.erp_locat;

        -- Bulk load location data from ERP source CSV
        BULK INSERT bronze.erp_locat
        FROM 'C:\SQL2022\sql-data-warehouse-project\datasets\source_erp\loc_a101.csv'
        WITH (
            FIRSTROW = 2,
            FIELDTERMINATOR = ',',
            TABLOCK
        );
        set @ENDTIME =GETDATE()
      print'bronze.erp_locat>> LOAD DURATION:' + cast( DATEDIFF(second,@START_TIME,@ENDTIME) as nvarchar) +'seconds';

        -- Truncate existing data in erp_part table
        set @START_TIME =GETDATE()
        TRUNCATE TABLE bronze.erp_part;

        -- Bulk load part catalog data from ERP source CSV
        BULK INSERT bronze.erp_part
        FROM 'C:\SQL2022\sql-data-warehouse-project\datasets\source_erp\PX_CAT_G1V2.CSV'
        WITH (
            FIRSTROW = 2,
            FIELDTERMINATOR = ',',
            TABLOCK
        );
        set @ENDTIME =GETDATE()
       print
       '>> LOAD DURATION:' + cast( DATEDIFF(second,@START_TIME,@ENDTIME) as nvarchar) +'seconds';
SET @END_TIME_WHOLEBATCH =GETDATE()
PRINT'=========================================================='
PRINT'LOADING BRONZE LAYER IS COMPLETED'
PRINT'TOTAL LOAD DURATION:' + CAST(DATEDIFF(SECOND,@START_TIME_WHOLEBATCH,@END_TIME_WHOLEBATCH) AS NVARCHAR) +'SECONDS'
PRINT'=========================================================='
 END TRY
BEGIN CATCH
PRINT'========================================='
PRINT'ERROR OCCURED DURING LOADING BRONZE LAYER'
PRINT'ERROR MESSAGE' +ERROR_MESSAGE();
PRINT'ERROR MESSAGE' +CAST(ERROR_NUMBER() AS NVARCHAR);
PRINT'ERROR MESSAGE' +CAST(ERROR_STATE() AS NVARCHAR);
PRINT'=========================================='

END CATCH
END;

